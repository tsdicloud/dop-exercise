#!/bin/bash

###
# This script simplifies Kubernetes login for Open Telekom Cloud (OTC)
# cloud container engine(CCE) login.
#
# CCE is integrated with Openstack and uses the Keystone Token Login
# for Kubernetes tokens.
#
# The script also lists the available clusters and their UUIDs for
# Kubernetes configuration
#
# For better understanding, the script uses the OTC helper tool
# (otc.sh) for the require OpenStack and native API calls

CERTPATH="$HOME/.kube"


# Register clusters in ~/.kube/config to configure kubernetes client library
# e.g. for kubectl
# Usage: registerCluster <TOKEN> <CLUSTER-UUID>
registerCluster() {
   CLUSTER=`curl -sS -X GET \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -H "X-Auth-Token: $1" \
      -H "X-Language: en-us" \
      "https://cce.eu-de.otc.t-systems.com/api/v1/clusters/$2/certificates"`


   CLUSTERNAME=`echo "$CLUSTER" | jq  -r ".cluster_name"`
   CACRT="$CERTPATH"/"$CLUSTERNAME".cacrt
   CLIENTCRT="$CERTPATH"/"$CLUSTERNAME".clientcrt
   CLIENTKEY="$CERTPATH"/"$CLUSTERNAME".clientkey

   ENDPOINT=`echo "$CLUSTER" | jq  -r ".endpoint"`
   echo "$CLUSTER"
   echo "$CLUSTER" | jq  -r ".cacrt" > "${CACRT}"
   echo "$CLUSTER" | jq  -r ".clientcrt" > "${CLIENTCRT}"
   echo "$CLUSTER" | jq  -r ".clientkey" > "${CLIENTKEY}"

   kubectl config set-cluster "$CLUSTERNAME" --server="$ENDPOINT" --certificate-authority="$CACRT"
   kubectl config set-credentials "$OS_USERNAME-$CLUSTERNAME" --certificate-authority="$CACRT" --client-key="$CLIENTKEY" --client-certificate="$CLIENTCRT"
   kubectl config set-context "$CLUSTERNAME"-ctx --cluster="$CLUSTERNAME" --user="$OS_USERNAME-$CLUSTERNAME"
}


# register clusrers with theis UUIDs
CLUSTERS=`otc.sh cluster list`
TOKEN=`otc.sh iam token`

OLDIFS=$IFS
IFS=$'\n'

for LINE in ${CLUSTERS[@]}
do
   IFS=' ';declare -a CLUSTER=( $LINE )
   registerCluster $TOKEN ${CLUSTER[0]}
done

IFS=$OLDIFS

# set default context
#if [ -n $CLUSTERS ] then
#   IFS=' ';declare -a CLUSTER1=( $CLUSTERS[0] )
#   kubectl config set-context default-system --user="$OS_USERNAME" --cluster="$CLUSTER1[1]"
#   kubectl config set current-context default-system
#fi

# install kubernetes dashboard - compatible with CCE kubernetes version
#kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.5.1/src/deploy/kubernetes-dashboard.yaml







